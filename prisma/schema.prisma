generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model activity {
  id            Int                     @id @default(autoincrement())
  title         String                  @db.VarChar(256)
  description   String                  @db.VarChar(256)
  start_date    DateTime                @db.Date
  end_date      DateTime                @db.Date
  location      String                  @db.VarChar(256)
  planner_id    Int
  activity_type activity_activity_type?
  user          user                    @relation(fields: [planner_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "activity_ibfk_2")
  notification  notification[]
  participation participation[]
  reviews       reviews[]

  @@index([planner_id], map: "planner_id")
}

model activity_type {
  id   Int    @id @default(autoincrement())
  name String @db.VarChar(256)
}

model message {
  id                             Int      @id @default(autoincrement())
  content                        String   @db.VarChar(256)
  timestamp                      DateTime @default(now()) @db.Timestamp(0)
  sender_id                      Int
  receiver_id                    Int
  user_message_receiver_idTouser user     @relation("message_receiver_idTouser", fields: [receiver_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "message_ibfk_1")
  user_message_sender_idTouser   user     @relation("message_sender_idTouser", fields: [sender_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "message_ibfk_2")

  @@index([receiver_id], map: "receiver_id")
  @@index([sender_id], map: "sender_id")
}

model notification {
  id                                  Int      @id @default(autoincrement())
  content                             String   @db.VarChar(256)
  timestamp                           DateTime @default(now()) @db.Timestamp(0)
  status                              String   @db.VarChar(256)
  sender_id                           Int
  receiver_id                         Int
  activity_id                         Int
  activity                            activity @relation(fields: [activity_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "notification_ibfk_1")
  user_notification_receiver_idTouser user     @relation("notification_receiver_idTouser", fields: [receiver_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "notification_ibfk_2")
  user_notification_sender_idTouser   user     @relation("notification_sender_idTouser", fields: [sender_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "notification_ibfk_3")

  @@index([activity_id], map: "activity_id")
  @@index([receiver_id], map: "receiver_id")
  @@index([sender_id], map: "sender_id")
}

model participation {
  id          Int      @id @default(autoincrement())
  user_id     Int
  activity_id Int
  status      String   @db.VarChar(256)
  date_joined DateTime @db.Date
  date_left   DateTime @db.Date
  user        user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "participation_ibfk_1")
  activity    activity @relation(fields: [activity_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "participation_ibfk_2")

  @@index([activity_id], map: "activity_id")
  @@index([user_id], map: "user_id")
}

model reviews {
  id          Int      @id @default(autoincrement())
  activity_id Int
  rating      Int
  comment     String   @db.VarChar(256)
  activity    activity @relation(fields: [activity_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "reviews_ibfk_1")

  @@index([activity_id], map: "activity_id")
}

model roles {
  id   Int    @id @default(autoincrement())
  name String @db.VarChar(256)
}

model user {
  id                                          Int             @id @default(autoincrement())
  firstname                                   String          @db.VarChar(256)
  lastname                                    String          @db.VarChar(256)
  email                                       String          @db.VarChar(256) @unique
  phone                                       String          @db.VarChar(256)
  password                                    String          @db.VarChar(256)
  activity                                    activity[]
  message_message_receiver_idTouser           message[]       @relation("message_receiver_idTouser")
  message_message_sender_idTouser             message[]       @relation("message_sender_idTouser")
  notification_notification_receiver_idTouser notification[]  @relation("notification_receiver_idTouser")
  notification_notification_sender_idTouser   notification[]  @relation("notification_sender_idTouser")
  participation                               participation[]
  user_profile                                user_profile[]
}

model user_profile {
  id              Int    @id @default(autoincrement())
  user_id         Int
  bio             String @db.VarChar(256)
  profile_picture String @db.VarChar(256)
  user            user   @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "user_profile_ibfk_1")

  @@index([user_id], map: "user_id")
}

enum activity_activity_type {
  outdoor
  indoor
}
